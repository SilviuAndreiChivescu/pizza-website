{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"./types\");\n\nvar DEFAULT_HEIGHT = 30;\nexports.DEFAULT_HEIGHT = DEFAULT_HEIGHT;\nvar DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\nexports.DEFAULT_WIDTH = DEFAULT_WIDTH;\n/**\n * Caches measurements for a given cell.\n */\n\nvar CellMeasurerCache = /*#__PURE__*/function () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCache);\n    (0, _defineProperty2[\"default\"])(this, \"_cellHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_cellWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_columnWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_rowHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_defaultHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_defaultWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_keyMapper\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports[\"default\"] = CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","DEFAULT_WIDTH","DEFAULT_HEIGHT","_classCallCheck2","_createClass2","_defineProperty2","_types","CellMeasurerCache","_this","params","arguments","length","undefined","_ref","index","key","_keyMapper","_columnWidthCache","_defaultWidth","_ref2","_rowHeightCache","_defaultHeight","defaultHeight","defaultWidth","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","Math","max","process","env","NODE_ENV","console","warn","clear","rowIndex","columnIndex","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","clearAll","_rowCount","_columnCount","hasFixedHeight","hasFixedWidth","getHeight","_key","getWidth","_key2","has","set","width","height","columnWidth","i","columnKey","rowHeight","_i","rowKey","get","concat"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"./types\");\n\nvar DEFAULT_HEIGHT = 30;\nexports.DEFAULT_HEIGHT = DEFAULT_HEIGHT;\nvar DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\nexports.DEFAULT_WIDTH = DEFAULT_WIDTH;\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCache);\n    (0, _defineProperty2[\"default\"])(this, \"_cellHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_cellWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_columnWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_rowHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_defaultHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_defaultWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_keyMapper\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports[\"default\"] = CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}"]},"metadata":{},"sourceType":"script"}