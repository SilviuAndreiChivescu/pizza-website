{"ast":null,"code":"var baseToString = require('./_baseToString'),\n    baseTrim = require('./_baseTrim'),\n    castSlice = require('./_castSlice'),\n    charsEndIndex = require('./_charsEndIndex'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\n\n\nfunction trim(string, chars, guard) {\n  string = toString(string);\n\n  if (string && (guard || chars === undefined)) {\n    return baseTrim(string);\n  }\n\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n  return castSlice(strSymbols, start, end).join('');\n}\n\nmodule.exports = trim;","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/node_modules/lodash/trim.js"],"names":["baseToString","require","baseTrim","castSlice","charsEndIndex","charsStartIndex","stringToArray","toString","trim","string","chars","guard","undefined","strSymbols","chrSymbols","start","end","join","module","exports"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CADtB;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAAC,cAAD,CAFvB;AAAA,IAGIG,aAAa,GAAGH,OAAO,CAAC,kBAAD,CAH3B;AAAA,IAIII,eAAe,GAAGJ,OAAO,CAAC,oBAAD,CAJ7B;AAAA,IAKIK,aAAa,GAAGL,OAAO,CAAC,kBAAD,CAL3B;AAAA,IAMIM,QAAQ,GAAGN,OAAO,CAAC,YAAD,CANtB;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,IAAT,CAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,KAA7B,EAAoC;AAClCF,EAAAA,MAAM,GAAGF,QAAQ,CAACE,MAAD,CAAjB;;AACA,MAAIA,MAAM,KAAKE,KAAK,IAAID,KAAK,KAAKE,SAAxB,CAAV,EAA8C;AAC5C,WAAOV,QAAQ,CAACO,MAAD,CAAf;AACD;;AACD,MAAI,CAACA,MAAD,IAAW,EAAEC,KAAK,GAAGV,YAAY,CAACU,KAAD,CAAtB,CAAf,EAA+C;AAC7C,WAAOD,MAAP;AACD;;AACD,MAAII,UAAU,GAAGP,aAAa,CAACG,MAAD,CAA9B;AAAA,MACIK,UAAU,GAAGR,aAAa,CAACI,KAAD,CAD9B;AAAA,MAEIK,KAAK,GAAGV,eAAe,CAACQ,UAAD,EAAaC,UAAb,CAF3B;AAAA,MAGIE,GAAG,GAAGZ,aAAa,CAACS,UAAD,EAAaC,UAAb,CAAb,GAAwC,CAHlD;AAKA,SAAOX,SAAS,CAACU,UAAD,EAAaE,KAAb,EAAoBC,GAApB,CAAT,CAAkCC,IAAlC,CAAuC,EAAvC,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBX,IAAjB","sourcesContent":["var baseToString = require('./_baseToString'),\n    baseTrim = require('./_baseTrim'),\n    castSlice = require('./_castSlice'),\n    charsEndIndex = require('./_charsEndIndex'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return baseTrim(string);\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nmodule.exports = trim;\n"]},"metadata":{},"sourceType":"script"}