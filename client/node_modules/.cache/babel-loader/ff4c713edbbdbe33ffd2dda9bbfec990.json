{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { prefix, withStyleProps, defaultProps, getUnhandledProps } from '../utils';\n\nvar Toggle = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Toggle, _React$Component);\n\n  function Toggle(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.handleChange = function (event) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          disabled = _this$props.disabled;\n      var checked = !_this.getCheckedStatus();\n\n      if (disabled) {\n        return;\n      }\n\n      _this.setState({\n        checked: checked\n      });\n\n      onChange === null || onChange === void 0 ? void 0 : onChange(checked, event);\n    };\n\n    _this.state = {\n      checked: props.defaultChecked\n    };\n    return _this;\n  }\n\n  var _proto = Toggle.prototype;\n\n  _proto.getCheckedStatus = function getCheckedStatus() {\n    var checked = this.props.checked;\n    return typeof checked === 'undefined' ? this.state.checked : checked;\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props2 = this.props,\n        disabled = _this$props2.disabled,\n        className = _this$props2.className,\n        checkedChildren = _this$props2.checkedChildren,\n        unCheckedChildren = _this$props2.unCheckedChildren,\n        classPrefix = _this$props2.classPrefix,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"disabled\", \"className\", \"checkedChildren\", \"unCheckedChildren\", \"classPrefix\"]);\n\n    var checked = this.getCheckedStatus();\n    var addPrefix = prefix(classPrefix);\n    var classes = classNames(classPrefix, className, (_classNames = {}, _classNames[addPrefix('checked')] = checked, _classNames[addPrefix('disabled')] = disabled, _classNames));\n    var inner = checked ? checkedChildren : unCheckedChildren;\n    var unhandled = getUnhandledProps(Toggle, rest);\n    return React.createElement(\"span\", _extends({}, unhandled, {\n      className: classes,\n      \"aria-pressed\": checked,\n      \"aria-disabled\": disabled,\n      \"aria-label\": typeof inner === 'string' ? inner : null,\n      role: \"button\",\n      tabIndex: -1,\n      onClick: this.handleChange\n    }), React.createElement(\"span\", {\n      className: addPrefix('inner')\n    }, inner));\n  };\n\n  return Toggle;\n}(React.Component);\n\nToggle.propTypes = {\n  disabled: PropTypes.bool,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  checkedChildren: PropTypes.node,\n  unCheckedChildren: PropTypes.node,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default compose(withStyleProps({\n  hasSize: true\n}), defaultProps({\n  classPrefix: 'btn-toggle'\n}))(Toggle);","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/node_modules/rsuite/es/Toggle/Toggle.js"],"names":["_extends","_objectWithoutPropertiesLoose","_inheritsLoose","React","PropTypes","classNames","compose","prefix","withStyleProps","defaultProps","getUnhandledProps","Toggle","_React$Component","props","_this","call","handleChange","event","_this$props","onChange","disabled","checked","getCheckedStatus","setState","state","defaultChecked","_proto","prototype","render","_classNames","_this$props2","className","checkedChildren","unCheckedChildren","classPrefix","rest","addPrefix","classes","inner","unhandled","createElement","role","tabIndex","onClick","Component","propTypes","bool","node","string","func","hasSize"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { prefix, withStyleProps, defaultProps, getUnhandledProps } from '../utils';\n\nvar Toggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Toggle, _React$Component);\n\n  function Toggle(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.handleChange = function (event) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          disabled = _this$props.disabled;\n      var checked = !_this.getCheckedStatus();\n\n      if (disabled) {\n        return;\n      }\n\n      _this.setState({\n        checked: checked\n      });\n\n      onChange === null || onChange === void 0 ? void 0 : onChange(checked, event);\n    };\n\n    _this.state = {\n      checked: props.defaultChecked\n    };\n    return _this;\n  }\n\n  var _proto = Toggle.prototype;\n\n  _proto.getCheckedStatus = function getCheckedStatus() {\n    var checked = this.props.checked;\n    return typeof checked === 'undefined' ? this.state.checked : checked;\n  };\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props2 = this.props,\n        disabled = _this$props2.disabled,\n        className = _this$props2.className,\n        checkedChildren = _this$props2.checkedChildren,\n        unCheckedChildren = _this$props2.unCheckedChildren,\n        classPrefix = _this$props2.classPrefix,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"disabled\", \"className\", \"checkedChildren\", \"unCheckedChildren\", \"classPrefix\"]);\n\n    var checked = this.getCheckedStatus();\n    var addPrefix = prefix(classPrefix);\n    var classes = classNames(classPrefix, className, (_classNames = {}, _classNames[addPrefix('checked')] = checked, _classNames[addPrefix('disabled')] = disabled, _classNames));\n    var inner = checked ? checkedChildren : unCheckedChildren;\n    var unhandled = getUnhandledProps(Toggle, rest);\n    return React.createElement(\"span\", _extends({}, unhandled, {\n      className: classes,\n      \"aria-pressed\": checked,\n      \"aria-disabled\": disabled,\n      \"aria-label\": typeof inner === 'string' ? inner : null,\n      role: \"button\",\n      tabIndex: -1,\n      onClick: this.handleChange\n    }), React.createElement(\"span\", {\n      className: addPrefix('inner')\n    }, inner));\n  };\n\n  return Toggle;\n}(React.Component);\n\nToggle.propTypes = {\n  disabled: PropTypes.bool,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  checkedChildren: PropTypes.node,\n  unCheckedChildren: PropTypes.node,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default compose(withStyleProps({\n  hasSize: true\n}), defaultProps({\n  classPrefix: 'btn-toggle'\n}))(Toggle);"]},"metadata":{},"sourceType":"module"}