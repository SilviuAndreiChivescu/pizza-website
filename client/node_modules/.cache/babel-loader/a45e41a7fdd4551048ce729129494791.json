{"ast":null,"code":"import hyphenateStyleName from './hyphenateStyleName';\nimport removeStyle from './removeStyle';\nexport default (function (node, property, value) {\n  var css = '';\n  var props = property;\n\n  if (typeof property === 'string') {\n    if (value === undefined) {\n      throw new Error('value is undefined');\n    }\n\n    (props = {})[property] = value;\n  }\n\n  if (typeof props === 'object') {\n    for (var key in props) {\n      if (Object.prototype.hasOwnProperty.call(props, key)) {\n        if (!props[key] && props[key] !== 0) {\n          removeStyle(node, hyphenateStyleName(key));\n        } else {\n          css += hyphenateStyleName(key) + \":\" + props[key] + \";\";\n        }\n      }\n    }\n  }\n\n  node.style.cssText += \";\" + css;\n});","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/node_modules/dom-lib/es/style/addStyle.js"],"names":["hyphenateStyleName","removeStyle","node","property","value","css","props","undefined","Error","key","Object","prototype","hasOwnProperty","call","style","cssText"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,gBAAgB,UAAUC,IAAV,EAAgBC,QAAhB,EAA0BC,KAA1B,EAAiC;AAC/C,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,KAAK,GAAGH,QAAZ;;AAEA,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,QAAIC,KAAK,KAAKG,SAAd,EAAyB;AACvB,YAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACD;;AAED,KAACF,KAAK,GAAG,EAAT,EAAaH,QAAb,IAAyBC,KAAzB;AACD;;AAED,MAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B;AAC7B,SAAK,IAAIG,GAAT,IAAgBH,KAAhB,EAAuB;AACrB,UAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,KAArC,EAA4CG,GAA5C,CAAJ,EAAsD;AACpD,YAAI,CAACH,KAAK,CAACG,GAAD,CAAN,IAAeH,KAAK,CAACG,GAAD,CAAL,KAAe,CAAlC,EAAqC;AACnCR,UAAAA,WAAW,CAACC,IAAD,EAAOF,kBAAkB,CAACS,GAAD,CAAzB,CAAX;AACD,SAFD,MAEO;AACLJ,UAAAA,GAAG,IAAIL,kBAAkB,CAACS,GAAD,CAAlB,GAA0B,GAA1B,GAAgCH,KAAK,CAACG,GAAD,CAArC,GAA6C,GAApD;AACD;AACF;AACF;AACF;;AAEDP,EAAAA,IAAI,CAACY,KAAL,CAAWC,OAAX,IAAsB,MAAMV,GAA5B;AACD,CAzBD","sourcesContent":["import hyphenateStyleName from './hyphenateStyleName';\nimport removeStyle from './removeStyle';\nexport default (function (node, property, value) {\n  var css = '';\n  var props = property;\n\n  if (typeof property === 'string') {\n    if (value === undefined) {\n      throw new Error('value is undefined');\n    }\n\n    (props = {})[property] = value;\n  }\n\n  if (typeof props === 'object') {\n    for (var key in props) {\n      if (Object.prototype.hasOwnProperty.call(props, key)) {\n        if (!props[key] && props[key] !== 0) {\n          removeStyle(node, hyphenateStyleName(key));\n        } else {\n          css += hyphenateStyleName(key) + \":\" + props[key] + \";\";\n        }\n      }\n    }\n  }\n\n  node.style.cssText += \";\" + css;\n});"]},"metadata":{},"sourceType":"module"}