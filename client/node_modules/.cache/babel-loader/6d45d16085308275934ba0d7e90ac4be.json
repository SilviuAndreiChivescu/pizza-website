{"ast":null,"code":"/* eslint-disable */\nimport canUseDOM from './canUseDOM';\n\nvar fallback = function fallback(context, node) {\n  if (node) {\n    do {\n      if (node === context) {\n        return true;\n      }\n    } while (node = node.parentNode);\n  }\n\n  return false;\n}; // HTML DOM and SVG DOM may have different support levels,\n// so we need to check on context instead of a document root element.\n\n\nvar contains = function contains(context, node) {\n  if (context.contains) {\n    return context.contains(node);\n  } else if (context.compareDocumentPosition) {\n    return context === node || !!(context.compareDocumentPosition(node) & 16);\n  }\n\n  return fallback(context, node);\n};\n\nexport default (function () {\n  return canUseDOM ? contains : fallback;\n})();","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/node_modules/dom-lib/es/query/contains.js"],"names":["canUseDOM","fallback","context","node","parentNode","contains","compareDocumentPosition"],"mappings":"AAAA;AACA,OAAOA,SAAP,MAAsB,aAAtB;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,IAA3B,EAAiC;AAC9C,MAAIA,IAAJ,EAAU;AACR,OAAG;AACD,UAAIA,IAAI,KAAKD,OAAb,EAAsB;AACpB,eAAO,IAAP;AACD;AACF,KAJD,QAISC,IAAI,GAAGA,IAAI,CAACC,UAJrB;AAKD;;AAED,SAAO,KAAP;AACD,CAVD,C,CAUG;AACH;;;AAGA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBH,OAAlB,EAA2BC,IAA3B,EAAiC;AAC9C,MAAID,OAAO,CAACG,QAAZ,EAAsB;AACpB,WAAOH,OAAO,CAACG,QAAR,CAAiBF,IAAjB,CAAP;AACD,GAFD,MAEO,IAAID,OAAO,CAACI,uBAAZ,EAAqC;AAC1C,WAAOJ,OAAO,KAAKC,IAAZ,IAAoB,CAAC,EAAED,OAAO,CAACI,uBAAR,CAAgCH,IAAhC,IAAwC,EAA1C,CAA5B;AACD;;AAED,SAAOF,QAAQ,CAACC,OAAD,EAAUC,IAAV,CAAf;AACD,CARD;;AAUA,eAAe,CAAC,YAAY;AAC1B,SAAOH,SAAS,GAAGK,QAAH,GAAcJ,QAA9B;AACD,CAFc,GAAf","sourcesContent":["/* eslint-disable */\nimport canUseDOM from './canUseDOM';\n\nvar fallback = function fallback(context, node) {\n  if (node) {\n    do {\n      if (node === context) {\n        return true;\n      }\n    } while (node = node.parentNode);\n  }\n\n  return false;\n}; // HTML DOM and SVG DOM may have different support levels,\n// so we need to check on context instead of a document root element.\n\n\nvar contains = function contains(context, node) {\n  if (context.contains) {\n    return context.contains(node);\n  } else if (context.compareDocumentPosition) {\n    return context === node || !!(context.compareDocumentPosition(node) & 16);\n  }\n\n  return fallback(context, node);\n};\n\nexport default (function () {\n  return canUseDOM ? contains : fallback;\n})();"]},"metadata":{},"sourceType":"module"}