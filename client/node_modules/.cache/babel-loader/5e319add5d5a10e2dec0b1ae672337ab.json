{"ast":null,"code":"var _jsxFileName = \"E:\\\\OneDrive - University of Salford\\\\Desktop\\\\pizza-website\\\\src\\\\pages.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Axios from 'axios';\nimport { UpperSide, MainMenu, Footer, CartNotOpened } from \"./index.js\";\nimport NavBar from './components/NavBar.js';\nimport CartAndCheckoutNavBar from \"./components/CartAndCheckoutNavBar.js\";\nimport CartOpen from \"./components/CartOpen.js\";\nimport SignIn from './SignIn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Autentificare() {\n  return /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n_c = Autentificare;\nexport function Menu() {\n  _s();\n\n  // useState to show the cart\n  const [popUp, setPopUp] = useState(\"noCart\");\n  {\n    /* Conditional rendering for showing the cart */\n  }\n\n  if (popUp == \"noCart\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MainMenu, {\n        setPopUp: () => setPopUp(\"cart\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else if (popUp == \"cart\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartAndCheckoutNavBar, {\n        setPopUp: () => setPopUp(\"noCart\"),\n        title: \"Cosul tau\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CartOpen, {\n        setPopUpCheckout: () => setPopUp(\"checkout\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartAndCheckoutNavBar, {\n        setPopUp: () => setPopUp(\"cart\"),\n        title: \"Aici dai comanda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Checkout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Menu, \"FC463hXijjv0BraUhXvYP7c4X/s=\");\n\n_c2 = Menu;\nexport function Mysql() {\n  _s2();\n\n  const [Name, setName] = useState(\"\");\n  const [Price, setPrice] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const [Image, setImage] = useState(\"\");\n  const [Category, setCategory] = useState(\"\"); // The below useState is used to display on the front-end all my info from db(Just as an example for me to have in the future)\n\n  const [products, setProducts] = useState([]); //Below useState is used to the update part of CRUD\n\n  const [newPrice, setNewPrice] = useState(\"\");\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/get').then(response => {\n      setProducts(response.data);\n    });\n  }, []);\n\n  const submit = () => {\n    Axios.post('http://localhost:3001/api/insert', {\n      Name: Name,\n      Price: Price,\n      Description: Description,\n      Image: Image,\n      Category: Category\n    }); // This below is: we are pushing inside our products array, the new insert so that you don't need to refresh page in order to get new info\n\n    setProducts([...products, {\n      Name: Name,\n      Price: Price\n    }]);\n  };\n\n  const deleteProduct = product => {\n    Axios.delete(`http://localhost:3001/api/delete/${product}`);\n    setProducts(products.filter(val => val.Name !== product));\n  };\n\n  const updatePrice = product => {\n    Axios.put(\"http://localhost:3001/api/update\", {\n      Name: product,\n      Price: newPrice\n    });\n    setNewPrice(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here will do the Mysql stuff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"products table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Name\",\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Price\",\n          onChange: e => {\n            setPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Description\",\n          onChange: e => {\n            setDescription(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Image\",\n          onChange: e => {\n            setImage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Category\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Category\",\n          onChange: e => {\n            setCategory(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), products.map(val => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Name: \", val.Name, \" | Price: \", val.Price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n} // export function Home() {\n//     return (\n//         <>\n//         <UpperSide />\n//         <UpperSideSecond />\n//         <Slideshow></Slideshow>\n//         <Main></Main>\n//         <Footer year={new Date().getFullYear()}></Footer>\n//         </>\n//     )\n// }\n\n_s2(Mysql, \"nxGTpTvkAqe5hYBxv1RI1hjNV7g=\");\n\n_c3 = Mysql;\nexport function Whoops404() {\n  _s3();\n\n  let location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Resource not found at \", location.pathname, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(Whoops404, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c4 = Whoops404;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Autentificare\");\n$RefreshReg$(_c2, \"Menu\");\n$RefreshReg$(_c3, \"Mysql\");\n$RefreshReg$(_c4, \"Whoops404\");","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/src/pages.js"],"names":["React","useState","useEffect","useReducer","Link","useLocation","Axios","UpperSide","MainMenu","Footer","CartNotOpened","NavBar","CartAndCheckoutNavBar","CartOpen","SignIn","Autentificare","Menu","popUp","setPopUp","Mysql","Name","setName","Price","setPrice","Description","setDescription","Image","setImage","Category","setCategory","products","setProducts","newPrice","setNewPrice","get","then","response","data","submit","post","deleteProduct","product","delete","filter","val","updatePrice","put","e","target","value","map","Whoops404","location","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\"\r\nimport {Link, useLocation} from \"react-router-dom\"\r\nimport Axios from 'axios'\r\nimport { UpperSide, MainMenu, Footer, CartNotOpened} from \"./index.js\"\r\nimport NavBar from './components/NavBar.js'\r\nimport CartAndCheckoutNavBar from \"./components/CartAndCheckoutNavBar.js\"\r\nimport CartOpen from \"./components/CartOpen.js\"\r\nimport SignIn from './SignIn'\r\n\r\nexport function Autentificare() {\r\n    return <SignIn />\r\n}\r\n\r\nexport function Menu() {\r\n    // useState to show the cart\r\n    const [popUp, setPopUp] = useState(\"noCart\");\r\n\r\n        {/* Conditional rendering for showing the cart */}\r\n        if (popUp == \"noCart\") {\r\n            return(\r\n            <>\r\n                <NavBar />       \r\n                <MainMenu setPopUp={ () => setPopUp(\"cart\") } />\r\n                {/* <CartNotOpened /> */}\r\n            </>\r\n            )\r\n        }\r\n        else if (popUp == \"cart\") { \r\n            return (\r\n                <>\r\n                    <CartAndCheckoutNavBar setPopUp={() => setPopUp(\"noCart\")} title={\"Cosul tau\"} />\r\n                    <CartOpen  setPopUpCheckout={() => setPopUp(\"checkout\")} /> \r\n                </>\r\n            );\r\n        }\r\n        else { \r\n            return (\r\n                <>\r\n                    <CartAndCheckoutNavBar setPopUp={() => setPopUp(\"cart\")} title={\"Aici dai comanda\"} />\r\n                    <Checkout /> \r\n                </>\r\n            )\r\n        }\r\n        \r\n}\r\n\r\nexport function Mysql() {\r\n    const [Name, setName] = useState(\"\");\r\n    const [Price, setPrice] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Image, setImage] = useState(\"\");\r\n    const [Category, setCategory] = useState(\"\");\r\n\r\n    // The below useState is used to display on the front-end all my info from db(Just as an example for me to have in the future)\r\n    const [products, setProducts] = useState([]);\r\n\r\n    //Below useState is used to the update part of CRUD\r\n    const [newPrice, setNewPrice] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:3001/api/get').then((response) => {\r\n            setProducts(response.data);\r\n        });\r\n    }, []);\r\n\r\n    const submit = () => {\r\n        Axios.post('http://localhost:3001/api/insert', \r\n        {Name: Name, Price: Price, Description: Description, Image: Image, Category: Category})\r\n        // This below is: we are pushing inside our products array, the new insert so that you don't need to refresh page in order to get new info\r\n        setProducts([\r\n            ...products,\r\n            {Name: Name, Price: Price},\r\n        ]);\r\n\r\n    };\r\n\r\n    const deleteProduct = (product) => {\r\n        Axios.delete(`http://localhost:3001/api/delete/${product}`)\r\n\r\n        setProducts(\r\n            products.filter(val => val.Name !== product)\r\n        )\r\n    };\r\n\r\n    const updatePrice = (product) => {\r\n        Axios.put(\"http://localhost:3001/api/update\", \r\n        {Name: product, Price: newPrice});\r\n        setNewPrice(\"\");\r\n    };\r\n\r\n    return(\r\n        <div className=\"bg-white text-center\">\r\n            <h1>Here will do the Mysql stuff</h1>\r\n            {/* <h2>users table</h2>\r\n            <div className=\"d-flex justify-content-center align-items-center flex-wrap\">\r\n                <label>Username<br></br>\r\n                <input type=\"text\" name=\"Username\" /></label>\r\n                <label>password<br></br>\r\n                <input type=\"text\" name=\"Password\" /></label>\r\n                <label>Email<br></br>\r\n                <input type=\"text\" name=\"Email\" /></label>\r\n                <label>Fullname<br></br>\r\n                <input type=\"text\" name=\"Fullname\" /></label>\r\n                <label>Address<br></br>\r\n                <input type=\"text\" name=\"Address\" /></label>\r\n                <label>Phone<br></br>\r\n                <input type=\"text\" name=\"Phone\" /> </label>\r\n            </div>\r\n            <h2>cart table</h2>\r\n            <div>\r\n                <label>CartID<br></br>\r\n                <input type=\"text\" name=\"CartID\" /></label>\r\n                <label>UserID<br></br>\r\n                <input type=\"text\" name=\"UserID\" /></label>\r\n                <label>ProductID<br></br>\r\n                <input type=\"text\" name=\"ProductID\" /></label>\r\n            </div> */}\r\n            <h2>products table</h2>\r\n            <div className=\"mb-5\">\r\n                <label>Name<br></br>\r\n                <input type=\"text\" name=\"Name\" onChange={(e) => {setName(e.target.value)}} /></label>\r\n                <label>Price<br></br>\r\n                <input type=\"text\" name=\"Price\" onChange={(e) => {setPrice(e.target.value)}} /></label>\r\n                <label>Description<br></br>\r\n                <input type=\"text\" name=\"Description\" onChange={(e) => {setDescription(e.target.value)}} /></label>\r\n                <label>Image<br></br>\r\n                <input type=\"text\" name=\"Image\" onChange={(e) => {setImage(e.target.value)}} /></label>\r\n                <label>Category<br></br>\r\n                <input type=\"text\" name=\"Category\" onChange={(e) => {setCategory(e.target.value)}} /></label>\r\n            </div>\r\n            <button onClick={submit}>Submit</button>\r\n\r\n            {products.map((val) => {\r\n                return (\r\n                <div>\r\n                    <h5>Name: {val.Name} | Price: {val.Price}</h5>\r\n                    {/* <button onClick={() => {deleteProduct(val.Name)}}>Delete</button>\r\n                    <input type=\"text\" placeholder=\"Update\" onChange={(e) => {setNewPrice(e.target.value)}} />\r\n                    <button onClick={() => {updatePrice(val.Name)}}>Update</button> */}\r\n                </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n// export function Home() {\r\n//     return (\r\n//         <>\r\n//         <UpperSide />\r\n//         <UpperSideSecond />\r\n//         <Slideshow></Slideshow>\r\n//         <Main></Main>\r\n//         <Footer year={new Date().getFullYear()}></Footer>\r\n//         </>\r\n//     )\r\n// }\r\n\r\nexport function Whoops404() {\r\n    let location = useLocation();\r\n\r\n    return(\r\n        <div>\r\n            <h1>Resource not found at {location.pathname}!</h1>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}