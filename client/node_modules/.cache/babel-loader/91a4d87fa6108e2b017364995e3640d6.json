{"ast":null,"code":"import * as React from 'react';\nimport createChainedFunction from './createChainedFunction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nconst SafeAnchor = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'a',\n  disabled,\n  onKeyDown,\n  ...props\n}, ref) => {\n  const handleClick = event => {\n    const {\n      href,\n      onClick\n    } = props;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  });\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/node_modules/react-bootstrap/esm/SafeAnchor.js"],"names":["React","createChainedFunction","jsx","_jsx","isTrivialHref","href","trim","SafeAnchor","forwardRef","as","Component","disabled","onKeyDown","props","ref","handleClick","event","onClick","preventDefault","stopPropagation","handleKeyDown","key","role","tabIndex","displayName"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAO,CAACA,IAAD,IAASA,IAAI,CAACC,IAAL,OAAgB,GAAhC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMC,UAAU,GAAG,aAAaP,KAAK,CAACQ,UAAN,CAAiB,CAAC;AAChD;AACAC,EAAAA,EAAE,EAAEC,SAAS,GAAG,GAFgC;AAGhDC,EAAAA,QAHgD;AAIhDC,EAAAA,SAJgD;AAKhD,KAAGC;AAL6C,CAAD,EAM9CC,GAN8C,KAMtC;AACT,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,UAAM;AACJX,MAAAA,IADI;AAEJY,MAAAA;AAFI,QAGFJ,KAHJ;;AAKA,QAAIF,QAAQ,IAAIP,aAAa,CAACC,IAAD,CAA7B,EAAqC;AACnCW,MAAAA,KAAK,CAACE,cAAN;AACD;;AAED,QAAIP,QAAJ,EAAc;AACZK,MAAAA,KAAK,CAACG,eAAN;AACA;AACD;;AAEDF,IAAAA,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACD,KAAD,CAAlC;AACD,GAhBD;;AAkBA,QAAMI,aAAa,GAAGJ,KAAK,IAAI;AAC7B,QAAIA,KAAK,CAACK,GAAN,KAAc,GAAlB,EAAuB;AACrBL,MAAAA,KAAK,CAACE,cAAN;AACAH,MAAAA,WAAW,CAACC,KAAD,CAAX;AACD;AACF,GALD;;AAOA,MAAIZ,aAAa,CAACS,KAAK,CAACR,IAAP,CAAjB,EAA+B;AAC7BQ,IAAAA,KAAK,CAACS,IAAN,GAAaT,KAAK,CAACS,IAAN,IAAc,QAA3B,CAD6B,CACQ;AACrC;;AAEAT,IAAAA,KAAK,CAACR,IAAN,GAAaQ,KAAK,CAACR,IAAN,IAAc,GAA3B;AACD;;AAED,MAAIM,QAAJ,EAAc;AACZE,IAAAA,KAAK,CAACU,QAAN,GAAiB,CAAC,CAAlB;AACAV,IAAAA,KAAK,CAAC,eAAD,CAAL,GAAyB,IAAzB;AACD;;AAED,SAAO,aAAaV,IAAI,CAACO,SAAD,EAAY;AAClCI,IAAAA,GAAG,EAAEA,GAD6B;AAElC,OAAGD,KAF+B;AAGlCI,IAAAA,OAAO,EAAEF,WAHyB;AAIlCH,IAAAA,SAAS,EAAEX,qBAAqB,CAACmB,aAAD,EAAgBR,SAAhB;AAJE,GAAZ,CAAxB;AAMD,CAlD+B,CAAhC;AAmDAL,UAAU,CAACiB,WAAX,GAAyB,YAAzB;AACA,eAAejB,UAAf","sourcesContent":["import * as React from 'react';\nimport createChainedFunction from './createChainedFunction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nconst SafeAnchor = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'a',\n  disabled,\n  onKeyDown,\n  ...props\n}, ref) => {\n  const handleClick = event => {\n    const {\n      href,\n      onClick\n    } = props;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  });\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;"]},"metadata":{},"sourceType":"module"}