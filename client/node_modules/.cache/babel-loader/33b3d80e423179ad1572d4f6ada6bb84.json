{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nimport SafeAnchor from './SafeAnchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled,\n  href,\n  onClick,\n  onSelect,\n  active: propActive,\n  as: Component,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const key = makeEventKey(eventKey, href);\n  const active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  const handleClick = useEventCallback(event => {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n    onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    onSelect == null ? void 0 : onSelect(key, event);\n  });\n  return (\n    /*#__PURE__*/\n    // \"TS2604: JSX element type 'Component' does not have any construct or call signatures.\"\n    // @ts-ignore\n    _jsx(Component, { ...props,\n      ref: ref,\n      href: href,\n      disabled: disabled,\n      className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n      onClick: handleClick\n    })\n  );\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/node_modules/react-bootstrap/esm/DropdownItem.js"],"names":["classNames","React","useContext","useEventCallback","SelectableContext","makeEventKey","useBootstrapPrefix","NavContext","SafeAnchor","jsx","_jsx","defaultProps","as","disabled","DropdownItem","forwardRef","bsPrefix","className","eventKey","href","onClick","onSelect","active","propActive","Component","props","ref","prefix","onSelectCtx","navContext","activeKey","key","handleClick","event","displayName"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,iBAAP,IAA4BC,YAA5B,QAAgD,qBAAhD;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAEJ,UADe;AAEnBK,EAAAA,QAAQ,EAAE;AAFS,CAArB;AAIA,MAAMC,YAAY,GAAG,aAAab,KAAK,CAACc,UAAN,CAAiB,CAAC;AAClDC,EAAAA,QADkD;AAElDC,EAAAA,SAFkD;AAGlDC,EAAAA,QAHkD;AAIlDL,EAAAA,QAJkD;AAKlDM,EAAAA,IALkD;AAMlDC,EAAAA,OANkD;AAOlDC,EAAAA,QAPkD;AAQlDC,EAAAA,MAAM,EAAEC,UAR0C;AASlDX,EAAAA,EAAE,EAAEY,SAT8C;AAUlD,KAAGC;AAV+C,CAAD,EAWhDC,GAXgD,KAWxC;AACT,QAAMC,MAAM,GAAGrB,kBAAkB,CAACU,QAAD,EAAW,eAAX,CAAjC;AACA,QAAMY,WAAW,GAAG1B,UAAU,CAACE,iBAAD,CAA9B;AACA,QAAMyB,UAAU,GAAG3B,UAAU,CAACK,UAAD,CAA7B;AACA,QAAM;AACJuB,IAAAA;AADI,MAEFD,UAAU,IAAI,EAFlB;AAGA,QAAME,GAAG,GAAG1B,YAAY,CAACa,QAAD,EAAWC,IAAX,CAAxB;AACA,QAAMG,MAAM,GAAGC,UAAU,IAAI,IAAd,IAAsBQ,GAAG,IAAI,IAA7B,GAAoC1B,YAAY,CAACyB,SAAD,CAAZ,KAA4BC,GAAhE,GAAsER,UAArF;AACA,QAAMS,WAAW,GAAG7B,gBAAgB,CAAC8B,KAAK,IAAI;AAC5C;AACA;AACA,QAAIpB,QAAJ,EAAc;AACdO,IAAAA,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACa,KAAD,CAAlC;AACAL,IAAAA,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACG,GAAD,EAAME,KAAN,CAA1C;AACAZ,IAAAA,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACU,GAAD,EAAME,KAAN,CAApC;AACD,GAPmC,CAApC;AAQA;AACE;AACA;AACA;AACAvB,IAAAA,IAAI,CAACc,SAAD,EAAY,EAAE,GAAGC,KAAL;AACdC,MAAAA,GAAG,EAAEA,GADS;AAEdP,MAAAA,IAAI,EAAEA,IAFQ;AAGdN,MAAAA,QAAQ,EAAEA,QAHI;AAIdI,MAAAA,SAAS,EAAEjB,UAAU,CAACiB,SAAD,EAAYU,MAAZ,EAAoBL,MAAM,IAAI,QAA9B,EAAwCT,QAAQ,IAAI,UAApD,CAJP;AAKdO,MAAAA,OAAO,EAAEY;AALK,KAAZ;AAJN;AAYD,CAxCiC,CAAlC;AAyCAlB,YAAY,CAACoB,WAAb,GAA2B,cAA3B;AACApB,YAAY,CAACH,YAAb,GAA4BA,YAA5B;AACA,eAAeG,YAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nimport SafeAnchor from './SafeAnchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled,\n  href,\n  onClick,\n  onSelect,\n  active: propActive,\n  as: Component,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const key = makeEventKey(eventKey, href);\n  const active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  const handleClick = useEventCallback(event => {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n    onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    onSelect == null ? void 0 : onSelect(key, event);\n  });\n  return (\n    /*#__PURE__*/\n    // \"TS2604: JSX element type 'Component' does not have any construct or call signatures.\"\n    // @ts-ignore\n    _jsx(Component, { ...props,\n      ref: ref,\n      href: href,\n      disabled: disabled,\n      className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n      onClick: handleClick\n    })\n  );\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;"]},"metadata":{},"sourceType":"module"}