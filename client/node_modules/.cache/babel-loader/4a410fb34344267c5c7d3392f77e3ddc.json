{"ast":null,"code":"import { findDOMNode } from 'react-dom';\nexport default function getDOMNode(element) {\n  var _element$getHTMLEleme;\n  /**\n   * Native HTML elements\n   */\n\n\n  if (element === null || element === void 0 ? void 0 : element.nodeType) {\n    return element;\n  }\n  /**\n   * The component provides the `getHTMLElement` method.\n   */\n\n\n  var htmlElement = element === null || element === void 0 ? void 0 : (_element$getHTMLEleme = element.getHTMLElement) === null || _element$getHTMLEleme === void 0 ? void 0 : _element$getHTMLEleme.call(element);\n\n  if (htmlElement) {\n    return htmlElement;\n  }\n  /**\n   * If you can't get the native HTML element, you can only get it through findDOMNode.\n   */\n  // eslint-disable-next-line react/no-find-dom-node\n\n\n  return findDOMNode(element);\n}","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/node_modules/rsuite/es/utils/getDOMNode.js"],"names":["findDOMNode","getDOMNode","element","_element$getHTMLEleme","nodeType","htmlElement","getHTMLElement","call"],"mappings":"AAAA,SAASA,WAAT,QAA4B,WAA5B;AACA,eAAe,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAC1C,MAAIC,qBAAJ;AAEA;AACF;AACA;;;AACE,MAAID,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACE,QAA9D,EAAwE;AACtE,WAAOF,OAAP;AACD;AACD;AACF;AACA;;;AAGE,MAAIG,WAAW,GAAGH,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACC,qBAAqB,GAAGD,OAAO,CAACI,cAAjC,MAAqD,IAArD,IAA6DH,qBAAqB,KAAK,KAAK,CAA5F,GAAgG,KAAK,CAArG,GAAyGA,qBAAqB,CAACI,IAAtB,CAA2BL,OAA3B,CAA7K;;AAEA,MAAIG,WAAJ,EAAiB;AACf,WAAOA,WAAP;AACD;AACD;AACF;AACA;AACE;;;AAGA,SAAOL,WAAW,CAACE,OAAD,CAAlB;AACD","sourcesContent":["import { findDOMNode } from 'react-dom';\nexport default function getDOMNode(element) {\n  var _element$getHTMLEleme;\n\n  /**\n   * Native HTML elements\n   */\n  if (element === null || element === void 0 ? void 0 : element.nodeType) {\n    return element;\n  }\n  /**\n   * The component provides the `getHTMLElement` method.\n   */\n\n\n  var htmlElement = element === null || element === void 0 ? void 0 : (_element$getHTMLEleme = element.getHTMLElement) === null || _element$getHTMLEleme === void 0 ? void 0 : _element$getHTMLEleme.call(element);\n\n  if (htmlElement) {\n    return htmlElement;\n  }\n  /**\n   * If you can't get the native HTML element, you can only get it through findDOMNode.\n   */\n  // eslint-disable-next-line react/no-find-dom-node\n\n\n  return findDOMNode(element);\n}"]},"metadata":{},"sourceType":"module"}