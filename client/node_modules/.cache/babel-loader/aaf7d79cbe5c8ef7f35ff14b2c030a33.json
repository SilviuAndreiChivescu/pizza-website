{"ast":null,"code":"var _jsxFileName = \"E:\\\\OneDrive - University of Salford\\\\Desktop\\\\pizza-website\\\\client\\\\src\\\\pages.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Axios from 'axios';\nimport MainMenu from \"./components/MainMenu.js\";\nimport MenuNavBar from './components/MenuNavBar.js';\nimport CartAndCheckoutNavBar from \"./components/CartAndCheckoutNavBar.js\";\nimport CartOpen from \"./components/CartOpen.js\";\nimport Checkout from \"./components/Checkout.js\";\nimport SignIn from './components/SignIn.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Autentificare() {\n  return /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n}\n_c = Autentificare;\nexport function Menu() {\n  _s();\n\n  // state to read/get\n  const [productsList, setProductsList] = useState([]); // useState to show the cart\n\n  const [popUp, setPopUp] = useState(\"cart\");\n  {\n    /* Conditional rendering for showing the cart */\n  }\n\n  if (popUp === \"noCart\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MenuNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MainMenu, {\n        setPopUp: () => setPopUp(\"cart\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } else if (popUp === \"cart\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartAndCheckoutNavBar, {\n        setPopUp: () => setPopUp(\"noCart\"),\n        title: \"Cosul tau\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CartOpen, {\n        setProductsList: e => setProductsList(e),\n        productsList: productsList,\n        setPopUpCheckout: () => setPopUp(\"checkout\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartAndCheckoutNavBar, {\n        setPopUp: () => setPopUp(\"cart\"),\n        title: \"Aici dai comanda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Checkout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Menu, \"jKifBqJK2gLPhsFZktHH561UuHU=\");\n\n_c2 = Menu;\nexport function MongoDB() {\n  _s2();\n\n  // States to post\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0); // dont forget to add this setNumberOfProduct on the modalLogic\n\n  const [numberOfProduct, setNumberOfProduct] = useState(1);\n\n  const addToList = () => {\n    Axios.post('http://localhost:3001/insert', {\n      name: name,\n      price: price,\n      numberOfProduct: numberOfProduct\n    });\n    setProductsList([...productsList, {\n      Name: name,\n      Price: price,\n      NumberOfProduct: numberOfProduct\n    }]);\n  }; // state to read/get\n\n\n  const [productsList, setProductsList] = useState([]);\n  useEffect(() => {\n    Axios.get('http://localhost:3001/read').then(response => {\n      setProductsList(response.data);\n    });\n  }, []); // state to update\n\n  const [newName, setNewName] = useState('');\n\n  const updateProduct = id => {\n    Axios.put('http://localhost:3001/update', {\n      id: id,\n      newName: newName\n    });\n  };\n\n  const deleteProduct = id => {\n    Axios.delete(`http://localhost:3001/delete/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD APP with MERN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Product name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => {\n        setName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 86\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Product price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: event => {\n        setPrice(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 89\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-3\",\n      onClick: addToList,\n      children: \"Add to List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Products List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), productsList.map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [val.Name, \" for \", val.Price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => setNewName(event.target.value),\n          type: \"text\",\n          placeholder: \"New product name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateProduct(val._id),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteProduct(val._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n} // ******** END MongoDB ********\n\n_s2(MongoDB, \"EO1Gbutzn3k+ypq8ON0mKDj+iqI=\");\n\n_c3 = MongoDB;\nexport function Mysql() {\n  _s3();\n\n  const [Name, setName] = useState(\"\");\n  const [Price, setPrice] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const [Image, setImage] = useState(\"\");\n  const [Category, setCategory] = useState(\"\"); // The below useState is used to display on the front-end all my info from db(Just as an example for me to have in the future)\n\n  const [products, setProducts] = useState([]); //Below useState is used to the update part of CRUD\n\n  const [newPrice, setNewPrice] = useState(\"\");\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/get').then(response => {\n      setProducts(response.data);\n    });\n  }, []);\n\n  const submit = () => {\n    Axios.post('http://localhost:3001/api/insert', {\n      Name: Name,\n      Price: Price,\n      Description: Description,\n      Image: Image,\n      Category: Category\n    }); // This below is: we are pushing inside our products array, the new insert so that you don't need to refresh page in order to get new info\n\n    setProducts([...products, {\n      Name: Name,\n      Price: Price\n    }]);\n  };\n\n  const deleteProduct = product => {\n    Axios.delete(`http://localhost:3001/api/delete/${product}`);\n    setProducts(products.filter(val => val.Name !== product));\n  };\n\n  const updatePrice = product => {\n    Axios.put(\"http://localhost:3001/api/update\", {\n      Name: product,\n      Price: newPrice\n    });\n    setNewPrice(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here will do the Mysql stuff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"products table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Name\",\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Price\",\n          onChange: e => {\n            setPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Description\",\n          onChange: e => {\n            setDescription(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Image\",\n          onChange: e => {\n            setImage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Category\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Category\",\n          onChange: e => {\n            setCategory(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), products.map(val => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Name: \", val.Name, \" | Price: \", val.Price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(Mysql, \"nxGTpTvkAqe5hYBxv1RI1hjNV7g=\");\n\n_c4 = Mysql;\nexport function Whoops404() {\n  _s4();\n\n  let location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Resource not found at \", location.pathname, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n}\n\n_s4(Whoops404, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c5 = Whoops404;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Autentificare\");\n$RefreshReg$(_c2, \"Menu\");\n$RefreshReg$(_c3, \"MongoDB\");\n$RefreshReg$(_c4, \"Mysql\");\n$RefreshReg$(_c5, \"Whoops404\");","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/client/src/pages.js"],"names":["React","useState","useEffect","useLocation","Axios","MainMenu","MenuNavBar","CartAndCheckoutNavBar","CartOpen","Checkout","SignIn","Autentificare","Menu","productsList","setProductsList","popUp","setPopUp","e","MongoDB","name","setName","price","setPrice","numberOfProduct","setNumberOfProduct","addToList","post","Name","Price","NumberOfProduct","get","then","response","data","newName","setNewName","updateProduct","id","put","deleteProduct","delete","event","target","value","map","val","key","_id","Mysql","Description","setDescription","Image","setImage","Category","setCategory","products","setProducts","newPrice","setNewPrice","submit","product","filter","updatePrice","Whoops404","location","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { useLocation} from \"react-router-dom\"\r\nimport Axios from 'axios'\r\nimport MainMenu from \"./components/MainMenu.js\"\r\nimport MenuNavBar from './components/MenuNavBar.js'\r\nimport CartAndCheckoutNavBar from \"./components/CartAndCheckoutNavBar.js\"\r\nimport CartOpen from \"./components/CartOpen.js\"\r\nimport Checkout from \"./components/Checkout.js\"\r\nimport SignIn from './components/SignIn.js'\r\n\r\nexport function Autentificare() {\r\n    return <SignIn />\r\n}\r\n\r\nexport function Menu() {\r\n\r\n    // state to read/get\r\n    const [productsList, setProductsList] = useState([]);\r\n\r\n    // useState to show the cart\r\n    const [popUp, setPopUp] = useState(\"cart\");\r\n\r\n        {/* Conditional rendering for showing the cart */}\r\n        if (popUp === \"noCart\") {\r\n            return(\r\n            <>\r\n                <MenuNavBar />       \r\n                <MainMenu setPopUp={ () => setPopUp(\"cart\") } />\r\n                {/* <CartNotOpened /> */}\r\n            </>\r\n            )\r\n        }\r\n        else if (popUp === \"cart\") { \r\n            return (\r\n                <>\r\n                    <CartAndCheckoutNavBar setPopUp={() => setPopUp(\"noCart\")} title={\"Cosul tau\"} />\r\n                    <CartOpen setProductsList={(e) => setProductsList(e)} productsList={productsList} setPopUpCheckout={() => setPopUp(\"checkout\")} /> \r\n                </>\r\n            );\r\n        }\r\n        else { \r\n            return (\r\n                <>\r\n                    <CartAndCheckoutNavBar setPopUp={() => setPopUp(\"cart\")} title={\"Aici dai comanda\"} />\r\n                    <Checkout /> \r\n                </>\r\n            )\r\n        }\r\n        \r\n}\r\n\r\nexport function MongoDB() {\r\n    // States to post\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    // dont forget to add this setNumberOfProduct on the modalLogic\r\n    const [numberOfProduct, setNumberOfProduct] = useState(1);\r\n\r\n    const addToList = () => {\r\n        Axios.post('http://localhost:3001/insert', {name: name, price: price, numberOfProduct: numberOfProduct});\r\n        setProductsList([\r\n            ...productsList,\r\n            {Name: name, Price: price, NumberOfProduct: numberOfProduct},\r\n        ]);\r\n    }\r\n    // state to read/get\r\n    const [productsList, setProductsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:3001/read').then((response) => {\r\n            setProductsList(response.data);\r\n        });\r\n    }, []);\r\n\r\n    // state to update\r\n    const [newName, setNewName] = useState('');\r\n\r\n    const updateProduct = (id) => {\r\n        Axios.put('http://localhost:3001/update', {id: id, newName: newName})\r\n    }\r\n    \r\n    const deleteProduct = (id) => {\r\n        Axios.delete(`http://localhost:3001/delete/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1>CRUD APP with MERN</h1><br></br>\r\n\r\n            <label>Product name</label><br></br>\r\n            <input type=\"text\" onChange={(event) => {setName(event.target.value)}} /><br></br>\r\n            <label>Product price</label><br></br>\r\n            <input type=\"number\" onChange={(event) => {setPrice(event.target.value)}} /><br></br>\r\n            <button className=\"mt-3\" onClick={addToList} >Add to List</button>\r\n            <h1>Products List</h1>\r\n\r\n            {productsList.map((val, key) => {\r\n                return (\r\n                <div key={key}>\r\n                    <h1>{val.Name} for {val.Price}</h1> \r\n                    <input onChange={(event) => setNewName(event.target.value)} type=\"text\" placeholder='New product name'/>\r\n                    <button onClick={() => updateProduct(val._id)}>Update</button>\r\n                    <button onClick={() => deleteProduct(val._id)}>Delete</button>\r\n                </div> \r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n// ******** END MongoDB ********\r\n\r\nexport function Mysql() {\r\n    const [Name, setName] = useState(\"\");\r\n    const [Price, setPrice] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [Image, setImage] = useState(\"\");\r\n    const [Category, setCategory] = useState(\"\");\r\n\r\n    // The below useState is used to display on the front-end all my info from db(Just as an example for me to have in the future)\r\n    const [products, setProducts] = useState([]);\r\n\r\n    //Below useState is used to the update part of CRUD\r\n    const [newPrice, setNewPrice] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:3001/api/get').then((response) => {\r\n            setProducts(response.data);\r\n        });\r\n    }, []);\r\n\r\n    const submit = () => {\r\n        Axios.post('http://localhost:3001/api/insert', \r\n        {Name: Name, Price: Price, Description: Description, Image: Image, Category: Category})\r\n        // This below is: we are pushing inside our products array, the new insert so that you don't need to refresh page in order to get new info\r\n        setProducts([\r\n            ...products,\r\n            {Name: Name, Price: Price},\r\n        ]);\r\n\r\n    };\r\n\r\n    const deleteProduct = (product) => {\r\n        Axios.delete(`http://localhost:3001/api/delete/${product}`)\r\n\r\n        setProducts(\r\n            products.filter(val => val.Name !== product)\r\n        )\r\n    };\r\n\r\n    const updatePrice = (product) => {\r\n        Axios.put(\"http://localhost:3001/api/update\", \r\n        {Name: product, Price: newPrice});\r\n        setNewPrice(\"\");\r\n    };\r\n\r\n    return(\r\n        <div className=\"bg-white text-center\">\r\n            <h1>Here will do the Mysql stuff</h1>\r\n            {/* <h2>users table</h2>\r\n            <div className=\"d-flex justify-content-center align-items-center flex-wrap\">\r\n                <label>Username<br></br>\r\n                <input type=\"text\" name=\"Username\" /></label>\r\n                <label>password<br></br>\r\n                <input type=\"text\" name=\"Password\" /></label>\r\n                <label>Email<br></br>\r\n                <input type=\"text\" name=\"Email\" /></label>\r\n                <label>Fullname<br></br>\r\n                <input type=\"text\" name=\"Fullname\" /></label>\r\n                <label>Address<br></br>\r\n                <input type=\"text\" name=\"Address\" /></label>\r\n                <label>Phone<br></br>\r\n                <input type=\"text\" name=\"Phone\" /> </label>\r\n            </div>\r\n            <h2>cart table</h2>\r\n            <div>\r\n                <label>CartID<br></br>\r\n                <input type=\"text\" name=\"CartID\" /></label>\r\n                <label>UserID<br></br>\r\n                <input type=\"text\" name=\"UserID\" /></label>\r\n                <label>ProductID<br></br>\r\n                <input type=\"text\" name=\"ProductID\" /></label>\r\n            </div> */}\r\n            <h2>products table</h2>\r\n            <div className=\"mb-5\">\r\n                <label>Name<br></br>\r\n                <input type=\"text\" name=\"Name\" onChange={(e) => {setName(e.target.value)}} /></label>\r\n                <label>Price<br></br>\r\n                <input type=\"text\" name=\"Price\" onChange={(e) => {setPrice(e.target.value)}} /></label>\r\n                <label>Description<br></br>\r\n                <input type=\"text\" name=\"Description\" onChange={(e) => {setDescription(e.target.value)}} /></label>\r\n                <label>Image<br></br>\r\n                <input type=\"text\" name=\"Image\" onChange={(e) => {setImage(e.target.value)}} /></label>\r\n                <label>Category<br></br>\r\n                <input type=\"text\" name=\"Category\" onChange={(e) => {setCategory(e.target.value)}} /></label>\r\n            </div>\r\n            <button onClick={submit}>Submit</button>\r\n\r\n            {products.map((val) => {\r\n                return (\r\n                <div>\r\n                    <h5>Name: {val.Name} | Price: {val.Price}</h5>\r\n                    {/* <button onClick={() => {deleteProduct(val.Name)}}>Delete</button>\r\n                    <input type=\"text\" placeholder=\"Update\" onChange={(e) => {setNewPrice(e.target.value)}} />\r\n                    <button onClick={() => {updatePrice(val.Name)}}>Update</button> */}\r\n                </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Whoops404() {\r\n    let location = useLocation();\r\n\r\n    return(\r\n        <div>\r\n            <h1>Resource not found at {location.pathname}!</h1>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}