{"ast":null,"code":"var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nmodule.exports = function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = date.getTimezoneOffset();\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n};","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js"],"names":["MILLISECONDS_IN_MINUTE","module","exports","getTimezoneOffsetInMilliseconds","dirtyDate","date","Date","getTime","baseTimezoneOffset","getTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset"],"mappings":"AAAA,IAAIA,sBAAsB,GAAG,KAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,+BAAT,CAA0CC,SAA1C,EAAqD;AACpE,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAS,CAACG,OAAV,EAAT,CAAX;AACA,MAAIC,kBAAkB,GAAGH,IAAI,CAACI,iBAAL,EAAzB;AACAJ,EAAAA,IAAI,CAACK,UAAL,CAAgB,CAAhB,EAAmB,CAAnB;AACA,MAAIC,gCAAgC,GAAGN,IAAI,CAACE,OAAL,KAAiBP,sBAAxD;AAEA,SAAOQ,kBAAkB,GAAGR,sBAArB,GAA8CW,gCAArD;AACD,CAPD","sourcesContent":["var MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nmodule.exports = function getTimezoneOffsetInMilliseconds (dirtyDate) {\n  var date = new Date(dirtyDate.getTime())\n  var baseTimezoneOffset = date.getTimezoneOffset()\n  date.setSeconds(0, 0)\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE\n\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset\n}\n"]},"metadata":{},"sourceType":"script"}