{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _canUseDOM = _interopRequireDefault(require(\"./query/canUseDOM\"));\n\nvar _stringFormatter = require(\"./utils/stringFormatter\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar memoized = {};\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\nvar prefixRegex = new RegExp(\"^(\" + prefixes.join('|') + \")\");\nvar testStyle = _canUseDOM[\"default\"] ? document.createElement('div').style : {};\n\nfunction getWithPrefix(name) {\n  for (var i = 0; i < prefixes.length; i += 1) {\n    var prefixedName = prefixes[i] + name;\n\n    if (prefixedName in testStyle) {\n      return prefixedName;\n    }\n  }\n\n  return null;\n}\n/**\n * @param {string} property Name of a css property to check for.\n * @return {?string} property name supported in the browser, or null if not\n * supported.\n */\n\n\nfunction getVendorPrefixedName(property) {\n  var name = (0, _stringFormatter.camelize)(property);\n\n  if (memoized[name] === undefined) {\n    var capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n\n    if (prefixRegex.test(capitalizedName)) {\n      throw new Error(\"getVendorPrefixedName must only be called with unprefixed\\n          CSS property names. It was called with \" + property);\n    }\n\n    memoized[name] = name in testStyle ? name : getWithPrefix(capitalizedName);\n  }\n\n  return memoized[name];\n}\n\nvar _default = getVendorPrefixedName;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/node_modules/dom-lib/lib/getVendorPrefixedName.js"],"names":["exports","__esModule","_canUseDOM","_interopRequireDefault","require","_stringFormatter","obj","memoized","prefixes","prefixRegex","RegExp","join","testStyle","document","createElement","style","getWithPrefix","name","i","length","prefixedName","getVendorPrefixedName","property","camelize","undefined","capitalizedName","charAt","toUpperCase","slice","test","Error","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,UAAU,GAAGC,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAvC;;AAEA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,yBAAD,CAA9B;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACL,UAAX,GAAwBK,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,QAAQ,GAAG,CAAC,QAAD,EAAW,IAAX,EAAiB,KAAjB,EAAwB,GAAxB,CAAf;AACA,IAAIC,WAAW,GAAG,IAAIC,MAAJ,CAAW,OAAOF,QAAQ,CAACG,IAAT,CAAc,GAAd,CAAP,GAA4B,GAAvC,CAAlB;AACA,IAAIC,SAAS,GAAGV,UAAU,CAAC,SAAD,CAAV,GAAwBW,QAAQ,CAACC,aAAT,CAAuB,KAAvB,EAA8BC,KAAtD,GAA8D,EAA9E;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,QAAQ,CAACW,MAA7B,EAAqCD,CAAC,IAAI,CAA1C,EAA6C;AAC3C,QAAIE,YAAY,GAAGZ,QAAQ,CAACU,CAAD,CAAR,GAAcD,IAAjC;;AAEA,QAAIG,YAAY,IAAIR,SAApB,EAA+B;AAC7B,aAAOQ,YAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AACvC,MAAIL,IAAI,GAAG,CAAC,GAAGZ,gBAAgB,CAACkB,QAArB,EAA+BD,QAA/B,CAAX;;AAEA,MAAIf,QAAQ,CAACU,IAAD,CAAR,KAAmBO,SAAvB,EAAkC;AAChC,QAAIC,eAAe,GAAGR,IAAI,CAACS,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BV,IAAI,CAACW,KAAL,CAAW,CAAX,CAArD;;AAEA,QAAInB,WAAW,CAACoB,IAAZ,CAAiBJ,eAAjB,CAAJ,EAAuC;AACrC,YAAM,IAAIK,KAAJ,CAAU,iHAAiHR,QAA3H,CAAN;AACD;;AAEDf,IAAAA,QAAQ,CAACU,IAAD,CAAR,GAAiBA,IAAI,IAAIL,SAAR,GAAoBK,IAApB,GAA2BD,aAAa,CAACS,eAAD,CAAzD;AACD;;AAED,SAAOlB,QAAQ,CAACU,IAAD,CAAf;AACD;;AAED,IAAIc,QAAQ,GAAGV,qBAAf;AACArB,OAAO,CAAC,SAAD,CAAP,GAAqB+B,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _canUseDOM = _interopRequireDefault(require(\"./query/canUseDOM\"));\n\nvar _stringFormatter = require(\"./utils/stringFormatter\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar memoized = {};\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\nvar prefixRegex = new RegExp(\"^(\" + prefixes.join('|') + \")\");\nvar testStyle = _canUseDOM[\"default\"] ? document.createElement('div').style : {};\n\nfunction getWithPrefix(name) {\n  for (var i = 0; i < prefixes.length; i += 1) {\n    var prefixedName = prefixes[i] + name;\n\n    if (prefixedName in testStyle) {\n      return prefixedName;\n    }\n  }\n\n  return null;\n}\n/**\n * @param {string} property Name of a css property to check for.\n * @return {?string} property name supported in the browser, or null if not\n * supported.\n */\n\n\nfunction getVendorPrefixedName(property) {\n  var name = (0, _stringFormatter.camelize)(property);\n\n  if (memoized[name] === undefined) {\n    var capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n\n    if (prefixRegex.test(capitalizedName)) {\n      throw new Error(\"getVendorPrefixedName must only be called with unprefixed\\n          CSS property names. It was called with \" + property);\n    }\n\n    memoized[name] = name in testStyle ? name : getWithPrefix(capitalizedName);\n  }\n\n  return memoized[name];\n}\n\nvar _default = getVendorPrefixedName;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}