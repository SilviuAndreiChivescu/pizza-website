{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  disabled: false\n};\nconst AbstractNavItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  className,\n  eventKey,\n  onSelect,\n  onClick,\n  as: Component,\n  ...props\n}, ref) => {\n  const navKey = makeEventKey(eventKey, props.href);\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  let isActive = active;\n\n  if (navContext) {\n    if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(navKey);\n    const contextControlledId = navContext.getControlledId(navKey);\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControllerId || !props.id, `[react-bootstrap] The provided id '${props.id}' was overwritten by the current navContext with '${contextControllerId}'.`) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControlledId || !props['aria-controls'], `[react-bootstrap] The provided aria-controls value '${props['aria-controls']}' was overwritten by the current navContext with '${contextControlledId}'.`) : void 0;\n    props['data-rb-event-key'] = navKey;\n    props.id = contextControllerId || props.id;\n    props['aria-controls'] = contextControlledId || props['aria-controls'];\n    isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n  }\n\n  if (props.role === 'tab') {\n    if (props.disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    props['aria-selected'] = isActive;\n  }\n\n  const handleOnclick = useEventCallback(e => {\n    onClick == null ? void 0 : onClick(e);\n    if (navKey == null) return;\n    onSelect == null ? void 0 : onSelect(navKey, e);\n    parentOnSelect == null ? void 0 : parentOnSelect(navKey, e);\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    onClick: handleOnclick,\n    className: classNames(className, isActive && 'active')\n  });\n});\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;","map":{"version":3,"sources":["E:/OneDrive - University of Salford/Desktop/pizza-website/node_modules/react-bootstrap/esm/AbstractNavItem.js"],"names":["classNames","React","useContext","useEventCallback","warning","NavContext","SelectableContext","makeEventKey","jsx","_jsx","defaultProps","disabled","AbstractNavItem","forwardRef","active","className","eventKey","onSelect","onClick","as","Component","props","ref","navKey","href","parentOnSelect","navContext","isActive","role","contextControllerId","getControllerId","contextControlledId","getControlledId","process","env","NODE_ENV","id","activeKey","tabIndex","handleOnclick","e"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,iBAAP,IAA4BC,YAA5B,QAAgD,qBAAhD;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAGA,MAAMC,eAAe,GAAG,aAAaX,KAAK,CAACY,UAAN,CAAiB,CAAC;AACrDC,EAAAA,MADqD;AAErDC,EAAAA,SAFqD;AAGrDC,EAAAA,QAHqD;AAIrDC,EAAAA,QAJqD;AAKrDC,EAAAA,OALqD;AAMrDC,EAAAA,EAAE,EAAEC,SANiD;AAOrD,KAAGC;AAPkD,CAAD,EAQnDC,GARmD,KAQ3C;AACT,QAAMC,MAAM,GAAGhB,YAAY,CAACS,QAAD,EAAWK,KAAK,CAACG,IAAjB,CAA3B;AACA,QAAMC,cAAc,GAAGvB,UAAU,CAACI,iBAAD,CAAjC;AACA,QAAMoB,UAAU,GAAGxB,UAAU,CAACG,UAAD,CAA7B;AACA,MAAIsB,QAAQ,GAAGb,MAAf;;AAEA,MAAIY,UAAJ,EAAgB;AACd,QAAI,CAACL,KAAK,CAACO,IAAP,IAAeF,UAAU,CAACE,IAAX,KAAoB,SAAvC,EAAkDP,KAAK,CAACO,IAAN,GAAa,KAAb;AAClD,UAAMC,mBAAmB,GAAGH,UAAU,CAACI,eAAX,CAA2BP,MAA3B,CAA5B;AACA,UAAMQ,mBAAmB,GAAGL,UAAU,CAACM,eAAX,CAA2BT,MAA3B,CAA5B;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC/B,OAAO,CAAC,CAACyB,mBAAD,IAAwB,CAACR,KAAK,CAACe,EAAhC,EAAqC,sCAAqCf,KAAK,CAACe,EAAG,qDAAoDP,mBAAoB,IAA3J,CAA/C,GAAiN,KAAK,CAAtN;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC/B,OAAO,CAAC,CAAC2B,mBAAD,IAAwB,CAACV,KAAK,CAAC,eAAD,CAA/B,EAAmD,uDAAsDA,KAAK,CAAC,eAAD,CAAkB,qDAAoDU,mBAAoB,IAAxM,CAA/C,GAA8P,KAAK,CAAnQ;AACAV,IAAAA,KAAK,CAAC,mBAAD,CAAL,GAA6BE,MAA7B;AACAF,IAAAA,KAAK,CAACe,EAAN,GAAWP,mBAAmB,IAAIR,KAAK,CAACe,EAAxC;AACAf,IAAAA,KAAK,CAAC,eAAD,CAAL,GAAyBU,mBAAmB,IAAIV,KAAK,CAAC,eAAD,CAArD;AACAM,IAAAA,QAAQ,GAAGb,MAAM,IAAI,IAAV,IAAkBS,MAAM,IAAI,IAA5B,GAAmCG,UAAU,CAACW,SAAX,KAAyBd,MAA5D,GAAqET,MAAhF;AACD;;AAED,MAAIO,KAAK,CAACO,IAAN,KAAe,KAAnB,EAA0B;AACxB,QAAIP,KAAK,CAACV,QAAV,EAAoB;AAClBU,MAAAA,KAAK,CAACiB,QAAN,GAAiB,CAAC,CAAlB;AACAjB,MAAAA,KAAK,CAAC,eAAD,CAAL,GAAyB,IAAzB;AACD;;AAEDA,IAAAA,KAAK,CAAC,eAAD,CAAL,GAAyBM,QAAzB;AACD;;AAED,QAAMY,aAAa,GAAGpC,gBAAgB,CAACqC,CAAC,IAAI;AAC1CtB,IAAAA,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,CAACsB,CAAD,CAAlC;AACA,QAAIjB,MAAM,IAAI,IAAd,EAAoB;AACpBN,IAAAA,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACM,MAAD,EAASiB,CAAT,CAApC;AACAf,IAAAA,cAAc,IAAI,IAAlB,GAAyB,KAAK,CAA9B,GAAkCA,cAAc,CAACF,MAAD,EAASiB,CAAT,CAAhD;AACD,GALqC,CAAtC;AAMA,SAAO,aAAa/B,IAAI,CAACW,SAAD,EAAY,EAAE,GAAGC,KAAL;AAClCC,IAAAA,GAAG,EAAEA,GAD6B;AAElCJ,IAAAA,OAAO,EAAEqB,aAFyB;AAGlCxB,IAAAA,SAAS,EAAEf,UAAU,CAACe,SAAD,EAAYY,QAAQ,IAAI,QAAxB;AAHa,GAAZ,CAAxB;AAKD,CA9CoC,CAArC;AA+CAf,eAAe,CAACF,YAAhB,GAA+BA,YAA/B;AACA,eAAeE,eAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  disabled: false\n};\nconst AbstractNavItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  className,\n  eventKey,\n  onSelect,\n  onClick,\n  as: Component,\n  ...props\n}, ref) => {\n  const navKey = makeEventKey(eventKey, props.href);\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  let isActive = active;\n\n  if (navContext) {\n    if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(navKey);\n    const contextControlledId = navContext.getControlledId(navKey);\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControllerId || !props.id, `[react-bootstrap] The provided id '${props.id}' was overwritten by the current navContext with '${contextControllerId}'.`) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!contextControlledId || !props['aria-controls'], `[react-bootstrap] The provided aria-controls value '${props['aria-controls']}' was overwritten by the current navContext with '${contextControlledId}'.`) : void 0;\n    props['data-rb-event-key'] = navKey;\n    props.id = contextControllerId || props.id;\n    props['aria-controls'] = contextControlledId || props['aria-controls'];\n    isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n  }\n\n  if (props.role === 'tab') {\n    if (props.disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    props['aria-selected'] = isActive;\n  }\n\n  const handleOnclick = useEventCallback(e => {\n    onClick == null ? void 0 : onClick(e);\n    if (navKey == null) return;\n    onSelect == null ? void 0 : onSelect(navKey, e);\n    parentOnSelect == null ? void 0 : parentOnSelect(navKey, e);\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    onClick: handleOnclick,\n    className: classNames(className, isActive && 'active')\n  });\n});\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;"]},"metadata":{},"sourceType":"module"}